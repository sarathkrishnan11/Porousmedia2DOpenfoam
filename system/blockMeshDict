/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
  //Inlet
	(-5 -4 0) //0
	(-5 -4 1)  //1
	(-5 4 1)  //2
	(-5 4 0)  //3
  //inlet to porous
	(-1 -4 0) //4
	(-1 -4 1)  //5
	(-1  4 1)  //6
	(-1  4 0)  //7
  // porous to outlet
        (1 -4 0) //8
	(1 -4 1)  //9
	(1  4 1)  //10
	(1  4 0)  //11
 // Outlet
        (15 -4 0) //12
	(15 -4 1)  //13
	(15 4 1)  //14
	(15 4 0)  //15
);

blocks
(
    // inlet block
    hex (0 4 7 3 1 5 6 2)
    inlet (80 160 1 ) simpleGrading (1 1 1)

    // porosity block
    hex (4 8 11 7 5 9 10 6)
    porosity (40 160 1 ) simpleGrading (1 1 1)

    // outlet block
    hex (8 12 15 11 9 13 14 10)
    outlet (280 160 1 ) simpleGrading (1 1 1)
    //hex (0 1 2 3 4 5 6 7) (120 20 20) simpleGrading (1 1 1)

);
edges
(
);


boundary
(
    front
    {
        type wall;
        faces
        (
            (0 4 7 3)
            (8 12 15 11)
        );
    }
    back
    {
        type wall;
        faces
        (
            (1 5 6 2)
            (9 13 14 10)
        );
    }
    inlet
    {
        type patch;
        faces
        (
            (0 1 2 3)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (12 13 14 15)
        );
    }
    porosityWall
    {
        type wall;
        faces
        (
            (4 8 11 7)
            (5 9 10 6)
            (4 8 9 5)
            (7 11 10 6)
        );
    }
    walls
    {
        type wall;
        faces
        (
            (0 4 5 1)
            (3 7 6 2)
            (8 12 13 9)
            (11 15 14 10)
        );
    }

);

// ************************************************************************* //
